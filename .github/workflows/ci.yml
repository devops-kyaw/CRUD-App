# CI workflow to build, test, and lint the CRUD app on push or pull request
name: CI Pipeline2
on:
  push:
    branches: [main] # Trigger on pushes to main branch
  pull_request:
    branches: [main] # Trigger on PRs to main branch
permissions:
  id-token: write
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest # Use GitHub's free Linux runner
    steps:
      - uses: actions/checkout@v3 # Check out the repository code
      - name: Set up Node.js # Install Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Use Node.js 18 for consistency
      - name: Cache dependencies # 1
        uses: actions/cache@v3
        with:
          path: ~/.npm # Cache npmâ€™s global cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }} # Key based on OS and package-lock.json

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::070238932258:role/GitHub_Actions_ECR_Role 
          aws-region: ap-southeast-2

      - name: Login to ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Compute image ref
        id: vars
        run: echo "image=${{ steps.ecr.outputs.registry }}/my-ecr-repo:${{ github.sha }}" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (load to runner for scanning)
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: |
            ${{ steps.vars.outputs.image }}
          load: true           # makes the image available locally for Trivy
          pull: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ steps.vars.outputs.image }}
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

      - name: Push image to Amazon ECR (only runs if Trivy passed)
        run: docker push "${{ steps.vars.outputs.image }}"
